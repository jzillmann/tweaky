allprojects {
    group = 'io.morethan.tweaky.examples'
}

buildscript {
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.5'
        classpath 'net.ltgt.gradle:gradle-apt-plugin:0.15'
    }
}

subprojects {

    apply plugin: 'java'
    apply plugin: 'eclipse'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    dependencies {
        compile group: 'com.google.guava', name: 'guava', version: '23.0'

        compile group: 'org.slf4j', name: 'slf4j-api', version: '1.8.0-alpha2'
        compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.11.0'
        compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.11.0'
        compile group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: '2.11.0'

        testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: junitVersion
        testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: junitVersion
        testCompileOnly group: 'org.apiguardian', name: 'apiguardian-api', version: '1.0.0' // Avoid compiler warnings about @API annotations in JUnit code

        testCompile group: 'org.mockito', name: 'mockito-core', version: '2.18.3'
        testCompile group: 'org.mockito', name: 'mockito-junit-jupiter', version: '2.18.3'

        testCompile group: 'org.assertj', name:'assertj-core', version:'3.9.0'
    }

    repositories {
    	maven {
            url '../../../local-maven-repository'
        }
        jcenter()
    }

    eclipse {
        jdt.file.withProperties {
            it['org.eclipse.jdt.core.formatter.lineSplit'] = '200'
            it['org.eclipse.jdt.core.formatter.comment.line_length'] = '180'
            it['org.eclipse.jdt.core.formatter.tabulation.char'] = 'space'
            it['org.eclipse.jdt.core.formatter.tabulation.size'] = '4'
            it['org.eclipse.jdt.core.formatter.join_wrapped_lines'] = 'false'
            it['org.eclipse.jdt.core.compiler.doc.comment.support'] = 'enabled'
            it['org.eclipse.jdt.core.compiler.problem.missingOverrideAnnotation'] = 'warning'
            it['org.eclipse.jdt.core.compiler.problem.missingJavadocTags'] = 'warning'
            it['org.eclipse.jdt.core.compiler.problem.parameterAssignment'] = 'ignore'
            it['org.eclipse.jdt.core.compiler.problem.syntheticAccessEmulation'] = 'ignore'
            it['org.eclipse.jdt.core.compiler.problem.unqualifiedFieldAccess'] = 'ignore'
        }
    }

    test {
        useJUnitPlatform()
        ignoreFailures project.hasProperty('ignoreTestFailures')
    }
    
}

task clean(group: 'Build', description: 'Deletes the build directory.') {
    dependsOn subprojects.collect { it.tasks.matching { it.name == 'clean' } }
    delete "$rootDir/build"
}
